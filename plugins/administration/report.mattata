--[[
    Copyright 2020 Matthew Hesketh <matthew@matthewhesketh.com>
    This code is licensed under the MIT. See LICENSE for details.
]]

local report = {}
local mattata = require('mattata')

function report:init()
    report.commands = mattata.commands(self.info.username):command('report'):command('ops').table
    report.help = '/report - Reports the replied-to message to all administrators of the group, via private message. Alias: /ops.'
end

function report:on_message(message, configuration, language)
    if not message.reply then
        return mattata.send_message(message.chat.id, language['report']['1'])
    elseif message.reply.from.id == message.from.id then
        return mattata.send_message(message.chat.id, language['report']['2'])
    end
    local admin_list = {}
    local admins = mattata.get_chat_administrators(message.chat.id)
    local notified = 0
    for n in pairs(admins.result) do
        if admins.result[n].user.id ~= self.info.id then
            local old_language = language
            language = require('languages.' .. mattata.get_user_language(admins.result[n].user.id))
            local output = string.format(language['report']['3'], mattata.escape_html(message.from.first_name), mattata.escape_html(message.chat.title))
            output = output .. '\n<a href="https://t.me/c/' .. tostring(message.chat.id):gsub('^%-100', '') .. '/' .. message.reply.message_id .. '">' .. language['report']['4'] .. '</a>'
            local success = mattata.send_message(admins.result[n].user.id, output, 'html')
            if success then
                mattata.forward_message(admins.result[n].user.id, message.chat.id, false, message.reply.message_id)
                notified = notified + 1
            end
            language = old_language
        end
    end
    local output = string.format(language['report']['5'], notified)
    return mattata.send_reply(message, output)
end

return report